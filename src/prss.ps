%!PS-Adobe-3.0
%%BoundingBox: 24 24 588 768
%%Title: Enscript Output
%%For: bjorn stevens
%%Creator: GNU enscript 1.6.1
%%CreationDate: Mon Apr 14 17:48:20 2008
%%Orientation: Landscape
%%Pages: (atend)
%%DocumentMedia: Letter 612 792 0 () ()
%%DocumentNeededResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset Enscript-Prolog 1.6 1
%
% Procedures.
%

/_S {	% save current state
  /_s save def
} def
/_R {	% restore from saved state
  _s restore
} def

/S {	% showpage protecting gstate
  gsave
  showpage
  grestore
} bind def

/MF {	% fontname newfontname -> -	make a new encoded font
  /newfontname exch def
  /fontname exch def

  /fontdict fontname findfont def
  /newfont fontdict maxlength dict def

  fontdict {
    exch
    dup /FID eq {
      % skip FID pair
      pop pop
    } {
      % copy to the new font dictionary
      exch newfont 3 1 roll put
    } ifelse
  } forall

  newfont /FontName newfontname put

  % insert only valid encoding vectors
  encoding_vector length 256 eq {
    newfont /Encoding encoding_vector put
  } if

  newfontname newfont definefont pop
} def

/SF { % fontname width height -> -	set a new font
  /height exch def
  /width exch def

  findfont
  [width 0 0 height 0 0] makefont setfont
} def

/SUF { % fontname width height -> -	set a new user font
  /height exch def
  /width exch def

  /F-gs-user-font MF
  /F-gs-user-font width height SF
} def

/M {moveto} bind def
/s {show} bind def

/Box {	% x y w h -> -			define box path
  /d_h exch def /d_w exch def /d_y exch def /d_x exch def
  d_x d_y  moveto
  d_w 0 rlineto
  0 d_h rlineto
  d_w neg 0 rlineto
  closepath
} def

/bgs {	% x y height blskip gray str -> -	show string with bg color
  /str exch def
  /gray exch def
  /blskip exch def
  /height exch def
  /y exch def
  /x exch def

  gsave
    x y blskip sub str stringwidth pop height Box
    gray setgray
    fill
  grestore
  x y M str s
} def

% Highlight bars.
/highlight_bars {	% nlines lineheight output_y_margin gray -> -
  gsave
    setgray
    /ymarg exch def
    /lineheight exch def
    /nlines exch def

    % This 2 is just a magic number to sync highlight lines to text.
    0 d_header_y ymarg sub 2 sub translate

    /cw d_output_w cols div def
    /nrows d_output_h ymarg 2 mul sub lineheight div cvi def

    % for each column
    0 1 cols 1 sub {
      cw mul /xp exch def

      % for each rows
      0 1 nrows 1 sub {
        /rn exch def
        rn lineheight mul neg /yp exch def
        rn nlines idiv 2 mod 0 eq {
	  % Draw highlight bar.  4 is just a magic indentation.
	  xp 4 add yp cw 8 sub lineheight neg Box fill
	} if
      } for
    } for

  grestore
} def

% Line highlight bar.
/line_highlight {	% x y width height gray -> -
  gsave
    /gray exch def
    Box gray setgray fill
  grestore
} def

% Column separator lines.
/column_lines {
  gsave
    .1 setlinewidth
    0 d_footer_h translate
    /cw d_output_w cols div def
    1 1 cols 1 sub {
      cw mul 0 moveto
      0 d_output_h rlineto stroke
    } for
  grestore
} def

% Column borders.
/column_borders {
  gsave
    .1 setlinewidth
    0 d_footer_h moveto
    0 d_output_h rlineto
    d_output_w 0 rlineto
    0 d_output_h neg rlineto
    closepath stroke
  grestore
} def

% Do the actual underlay drawing
/draw_underlay {
  ul_style 0 eq {
    ul_str true charpath stroke
  } {
    ul_str show
  } ifelse
} def

% Underlay
/underlay {	% - -> -
  gsave
    0 d_page_h translate
    d_page_h neg d_page_w atan rotate

    ul_gray setgray
    ul_font setfont
    /dw d_page_h dup mul d_page_w dup mul add sqrt def
    ul_str stringwidth pop dw exch sub 2 div ul_h_ptsize -2 div moveto
    draw_underlay
  grestore
} def

/user_underlay {	% - -> -
  gsave
    ul_x ul_y translate
    ul_angle rotate
    ul_gray setgray
    ul_font setfont
    0 0 ul_h_ptsize 2 div sub moveto
    draw_underlay
  grestore
} def

% Page prefeed
/page_prefeed {		% bool -> -
  statusdict /prefeed known {
    statusdict exch /prefeed exch put
  } {
    pop
  } ifelse
} def

% Wrapped line markers
/wrapped_line_mark {	% x y charwith charheight type -> -
  /type exch def
  /h exch def
  /w exch def
  /y exch def
  /x exch def

  type 2 eq {
    % Black boxes (like TeX does)
    gsave
      0 setlinewidth
      x w 4 div add y M
      0 h rlineto w 2 div 0 rlineto 0 h neg rlineto
      closepath fill
    grestore
  } {
    type 3 eq {
      % Small arrows
      gsave
        .2 setlinewidth
        x w 2 div add y h 2 div add M
        w 4 div 0 rlineto
        x w 4 div add y lineto stroke

        x w 4 div add w 8 div add y h 4 div add M
        x w 4 div add y lineto
	w 4 div h 8 div rlineto stroke
      grestore
    } {
      % do nothing
    } ifelse
  } ifelse
} def

% EPSF import.

/BeginEPSF {
  /b4_Inc_state save def    		% Save state for cleanup
  /dict_count countdictstack def	% Count objects on dict stack
  /op_count count 1 sub def		% Count objects on operand stack
  userdict begin
  /showpage { } def
  0 setgray 0 setlinecap
  1 setlinewidth 0 setlinejoin
  10 setmiterlimit [ ] 0 setdash newpath
  /languagelevel where {
    pop languagelevel
    1 ne {
      false setstrokeadjust false setoverprint
    } if
  } if
} bind def

/EndEPSF {
  count op_count sub { pos } repeat	% Clean up stacks
  countdictstack dict_count sub { end } repeat
  b4_Inc_state restore
} bind def

% Check PostScript language level.
/languagelevel where {
  pop /gs_languagelevel languagelevel def
} {
  /gs_languagelevel 1 def
} ifelse
%%EndResource
%%BeginResource: procset Enscript-Encoding-88591 1.6 1
/encoding_vector [
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclam       	/quotedbl     	/numbersign   	
/dollar       	/percent      	/ampersand    	/quoteright   	
/parenleft    	/parenright   	/asterisk     	/plus         	
/comma        	/hyphen       	/period       	/slash        	
/zero         	/one          	/two          	/three        	
/four         	/five         	/six          	/seven        	
/eight        	/nine         	/colon        	/semicolon    	
/less         	/equal        	/greater      	/question     	
/at           	/A            	/B            	/C            	
/D            	/E            	/F            	/G            	
/H            	/I            	/J            	/K            	
/L            	/M            	/N            	/O            	
/P            	/Q            	/R            	/S            	
/T            	/U            	/V            	/W            	
/X            	/Y            	/Z            	/bracketleft  	
/backslash    	/bracketright 	/asciicircum  	/underscore   	
/quoteleft    	/a            	/b            	/c            	
/d            	/e            	/f            	/g            	
/h            	/i            	/j            	/k            	
/l            	/m            	/n            	/o            	
/p            	/q            	/r            	/s            	
/t            	/u            	/v            	/w            	
/x            	/y            	/z            	/braceleft    	
/bar          	/braceright   	/tilde        	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/.notdef      	/.notdef      	/.notdef      	/.notdef      	
/space        	/exclamdown   	/cent         	/sterling     	
/currency     	/yen          	/brokenbar    	/section      	
/dieresis     	/copyright    	/ordfeminine  	/guillemotleft	
/logicalnot   	/hyphen       	/registered   	/macron       	
/degree       	/plusminus    	/twosuperior  	/threesuperior	
/acute        	/mu           	/paragraph    	/bullet       	
/cedilla      	/onesuperior  	/ordmasculine 	/guillemotright	
/onequarter   	/onehalf      	/threequarters	/questiondown 	
/Agrave       	/Aacute       	/Acircumflex  	/Atilde       	
/Adieresis    	/Aring        	/AE           	/Ccedilla     	
/Egrave       	/Eacute       	/Ecircumflex  	/Edieresis    	
/Igrave       	/Iacute       	/Icircumflex  	/Idieresis    	
/Eth          	/Ntilde       	/Ograve       	/Oacute       	
/Ocircumflex  	/Otilde       	/Odieresis    	/multiply     	
/Oslash       	/Ugrave       	/Uacute       	/Ucircumflex  	
/Udieresis    	/Yacute       	/Thorn        	/germandbls   	
/agrave       	/aacute       	/acircumflex  	/atilde       	
/adieresis    	/aring        	/ae           	/ccedilla     	
/egrave       	/eacute       	/ecircumflex  	/edieresis    	
/igrave       	/iacute       	/icircumflex  	/idieresis    	
/eth          	/ntilde       	/ograve       	/oacute       	
/ocircumflex  	/otilde       	/odieresis    	/divide       	
/oslash       	/ugrave       	/uacute       	/ucircumflex  	
/udieresis    	/yacute       	/thorn        	/ydieresis    	
] def
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeResource: font Courier-Bold
%%IncludeResource: font Courier
/HFpt_w 10 def
/HFpt_h 10 def
/Courier-Bold /HF-gs-font MF
/HF /HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] makefont def
/Courier /F-gs-font MF
/F-gs-font 7 7 SF
/#copies 1 def
% Pagedevice definitions:
gs_languagelevel 1 gt {
  <<
    /PageSize [612 792] 
  >> setpagedevice
} if
%%BeginResource: procset Enscript-Header-enscript 1.6 1
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Roman

% Fonts.
/Times-Bold /HeaderFont-Bold MF
/HeaderDateF /HeaderFont-Bold findfont 12 scalefont def

/Times-Roman /HeaderFont-Times MF
/HeaderHDRF /HeaderFont-Times findfont 14 scalefont def

/HeaderPageNumF /Helvetica-Bold findfont 28.8 scalefont def

/do_header {	% print enscript header
  gsave
    d_header_x d_header_y translate

    % light bar
    0 0 d_header_w d_header_h 2 div Box
    .95 setgray fill

    % dark gray boxes
    /dbw d_header_h 2 mul def	% dark box width
    /dbc .7 def			% dark box color

    % left dark box.
    0 0 dbw d_header_h Box
    dbc setgray fill

    0 setgray 
    HeaderDateF setfont
    moddatestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 2 div 2 add moveto show
    modtimestr dup stringwidth pop dbw exch sub 2 div 
    d_header_h 5 div moveto show

    % right dark box
    d_header_w dbw sub 0 dbw d_header_h Box
    dbc setgray fill

    HeaderPageNumF setfont
    1 setgray
    pagenumstr dup
    stringwidth pop dbw exch sub 2 div d_header_w dbw sub add
    d_header_h .2 mul moveto show

    % filename
    0 setgray 
    HeaderHDRF setfont
    d_header_w fname stringwidth pop sub 2 div d_header_h 8 div moveto
    fname show

    % user supplied header string.
    user_header_p {
      /h d_header_h 8 div 5 mul def

      % Implement strict enscript compatibility.
      user_header_center_str () eq user_header_right_str () eq and {
        d_header_w user_header_left_str stringwidth pop sub 2 div 
        h moveto user_header_left_str show
      } {
        dbw 5 add h moveto user_header_left_str show

        d_header_w user_header_center_str stringwidth pop sub 2 div 
        h moveto user_header_center_str show

	d_header_w dbw sub 5 sub user_header_right_str stringwidth pop
	sub h moveto user_header_right_str show
      } ifelse
    } if

  grestore
} def
%%EndResource
/d_page_w 744 def
/d_page_h 564 def
/d_header_x 0 def
/d_header_y 528 def
/d_header_w 744 def
/d_header_h 36 def
/d_footer_x 0 def
/d_footer_y 0 def
/d_footer_w 744 def
/d_footer_h 0 def
/d_output_w 744 def
/d_output_h 528 def
/cols 2 def
%%EndSetup
%%Page: (1) 1
%%BeginPageSetup
_S
90 rotate
24 -588 translate
/pagenum 1 def
/fname (prss.f90) def
/fdir () def
/ftail (prss.f90) def
% User defined strings:
/pagenumstr (1) def
/moddatestr (04/09/08) def
/modtimestr (15:58:31) def
/user_header_p false def
%%EndPageSetup
column_lines
do_header
5 518 M
(!----------------------------------------------------------------------------) s
5 510 M
(! This file is part of UCLALES.) s
5 502 M
(!) s
5 494 M
(! UCLALES is free software; you can redistribute it and/or modify) s
5 486 M
(! it under the terms of the GNU General Public License as published by) s
5 478 M
(! the Free Software Foundation; either version 3 of the License, or) s
5 470 M
(! \(at your option\) any later version.) s
5 462 M
(!) s
5 454 M
(! UCLALES is distributed in the hope that it will be useful,) s
5 446 M
(! but WITHOUT ANY WARRANTY; without even the implied warranty of) s
5 438 M
(! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the) s
5 430 M
(! GNU General Public License for more details.) s
5 422 M
(!) s
5 414 M
(! You should have received a copy of the GNU General Public License) s
5 406 M
(! along with this program.  If not, see <http://www.gnu.org/licenses/>.) s
5 398 M
(!) s
5 390 M
(! Copyright 1999-2007, Bjorn B. Stevens, Dep't Atmos and Ocean Sci, UCLA) s
5 382 M
(!----------------------------------------------------------------------------) s
5 374 M
(!) s
5 366 M
(! PRSS: Pressure Solver:  Solves the anelastic or bousinessq system ) s
5 358 M
(! for the pressure using a fractional step method, which is implemented) s
5 350 M
(! using fft's and a tri-diagonal solver in the vertical) s
5 342 M
(!) s
5 334 M
(module prss) s
5 318 M
(  use defs, only: pi) s
5 310 M
(  implicit none) s
5 294 M
(contains) s
5 286 M
(!) s
5 278 M
(!----------------------------------------------------------------------) s
5 270 M
(! subroutine poisson: called by timesteping driver to invert the ) s
5 262 M
(! poisson equation for pressure and apply the velocity tendencies.) s
5 254 M
(!) s
5 246 M
(  subroutine poisson) s
5 230 M
(    use grid, only : nxp, nyp, nzp, dtlt, dxi, dyi, dzi_m, dzi_t, a_up,       &) s
5 222 M
(         a_uc, a_ut, a_vp, a_vc, a_vt, a_wp, a_wc, a_wt, a_press, a_pexnr,&) s
5 214 M
(         th00, dn0, wsavex, wsavey) s
5 206 M
(    use stat, only : fill_scalar, sflg) s
5 198 M
(    use util, only : ae1mm) s
5 182 M
(    complex, allocatable     :: s1\(:,:,:\)) s
5 174 M
(    real    :: mxdiv, awpbar\(nzp\)) s
5 166 M
(    integer :: ix,iy) s
5 150 M
(    ix=max\(1,nxp-4\)) s
5 142 M
(    iy=max\(1,nyp-4\)) s
5 126 M
(    allocate \(s1\(ix,iy,nzp\)\)) s
5 118 M
(    s1=0.0) s
5 110 M
(    !) s
5 102 M
(    ! -------) s
5 94 M
(    ! Do first step of asselin filter, first saving corrlations of ) s
5 86 M
(    ! tendencies for TKE budget on statistics timestep) s
5 78 M
(    !) s
5 70 M
(    call asselin\(1\)) s
5 54 M
(    call apl_tnd\(nzp,nxp,nyp,a_up,a_vp,a_wp,a_ut,a_vt,a_wt,dtlt\)) s
5 46 M
(    !) s
5 38 M
(    ! ------) s
5 30 M
(    ! Pressure Solve) s
5 22 M
(    !) s
5 14 M
(    call poiss\(nzp,nxp,nyp,ix,iy,a_up,a_vp,a_wp,a_pexnr,a_press,dn0,th00,dzi_t &) s
5 6 M
(         ,dzi_m,dxi,dyi,dtlt,s1,wsavex,wsavey\)) s
377 510 M
(    call ae1mm\(nzp,nxp,nyp,a_wp,awpbar\)) s
377 502 M
(    !) s
377 494 M
(    ! -------) s
377 486 M
(    ! Do second step of asselin filter, first saving corrlations of ) s
377 478 M
(    ! tendencies for TKE budget on statistics timestep, note that the) s
377 470 M
(    ! old centered velocity resides in up,vp,wp after the second step) s
377 462 M
(    ! of the asselin filter, hence the pressure correlation terms in the) s
377 454 M
(    ! tke budget include the effects of time filtering) s
377 446 M
(    !) s
377 438 M
(    call asselin\(2\)) s
377 422 M
(    call velocity_bcs) s
377 406 M
(    if \(sflg\) then) s
377 398 M
(       call get_diverg\(nzp,nxp,nyp,ix,iy,s1,a_up,a_vp,a_wp,dn0,dzi_t,dxi,dyi,  &) s
377 390 M
(            dtlt,mxdiv\)) s
377 382 M
(       call fill_scalar\(2,mxdiv\)) s
377 374 M
(       call prs_cor\(nzp,nxp,nyp,a_pexnr,a_up,a_vp,a_wp,dzi_m,dxi,dyi,th00\)) s
377 366 M
(       call chk_tsplt\(nzp,nxp,nyp,a_up,a_vp,a_wp,a_uc,a_vc,a_wc\)) s
377 358 M
(    end if) s
377 350 M
(    deallocate \(s1\)) s
377 334 M
(  end subroutine poisson) s
377 318 M
(  !) s
377 310 M
(  ! --------------------------------------------------------------------) s
377 302 M
(  ! subroutine apl_tnd: applies tendencies to velocity field) s
377 294 M
(  !) s
377 286 M
(  subroutine apl_tnd\(n1,n2,n3,u,v,w,ut,vt,wt,dtlt\)) s
377 270 M
(    use util, only : velset) s
377 254 M
(    integer :: n1,n2,n3,i,k,j) s
377 246 M
(    real :: u\(n1,n2,n3\),v\(n1,n2,n3\),w\(n1,n2,n3\)) s
377 238 M
(    real :: ut\(n1,n2,n3\),vt\(n1,n2,n3\),wt\(n1,n2,n3\),dtlt,dt) s
377 222 M
(    dt=dtlt*2.) s
377 206 M
(    do j=1,n3) s
377 198 M
(       do i=1,n2) s
377 190 M
(          do k=2,n1-1) s
377 182 M
(             w\(k,i,j\)=w\(k,i,j\)+wt\(k,i,j\)*dt) s
377 174 M
(             u\(k,i,j\)=u\(k,i,j\)+ut\(k,i,j\)*dt) s
377 166 M
(             v\(k,i,j\)=v\(k,i,j\)+vt\(k,i,j\)*dt) s
377 158 M
(          end do) s
377 150 M
(       end do) s
377 142 M
(    end do) s
377 126 M
(    call velset\(n1,n2,n3,u,v,w\)) s
377 110 M
(  end subroutine apl_tnd) s
377 102 M
(  !) s
377 94 M
(  ! --------------------------------------------------------------------) s
377 86 M
(  ! subroutine poiss: called each timestep to evaluate the pressure) s
377 78 M
(  ! in accordance with the anelastic continuity equation, and then apply) s
377 70 M
(  ! the pressure to the velocity terms for three dimensional flow, ) s
377 62 M
(  ! cyclic in x and y.  pp and pc are used as scratch arrays in the) s
377 54 M
(  ! call to trdprs.  pp is filled with its diagnostic value in fll_prs) s
377 46 M
(  !) s
377 38 M
(  subroutine poiss\(n1,n2,n3,ix,iy,u,v,w,pp,pc,dn0,th00,dzi_t,dzi_m,dx,dy,  &) s
377 30 M
(       dtlt,s1,wsvx,wsvy\)) s
377 14 M
(    use util, only  : velset, get_fft_twodim) s
_R
S
%%Page: (2) 2
%%BeginPageSetup
_S
90 rotate
24 -588 translate
/pagenum 2 def
/fname (prss.f90) def
/fdir () def
/ftail (prss.f90) def
% User defined strings:
/pagenumstr (2) def
/moddatestr (04/09/08) def
/modtimestr (15:58:31) def
/user_header_p false def
%%EndPageSetup
column_lines
do_header
5 518 M
(    integer :: n1,n2,n3,ix,iy) s
5 510 M
(    real    :: pp\(n1,n2,n3\),pc\(n1,n2,n3\),dmy) s
5 502 M
(    real    :: u\(n1,n2,n3\),v\(n1,n2,n3\),w\(n1,n2,n3\)) s
5 494 M
(    real    :: wsvx\(1:\),wsvy\(1:\),dn0\(n1\),dzi_t\(n1\),dzi_m\(n1\),dx,dy,dtlt,th00) s
5 486 M
(    complex :: s1\(ix,iy,n1\)) s
5 470 M
(    call get_diverg\(n1,n2,n3,ix,iy,s1,u,v,w,dn0,dzi_t,dx,dy,dtlt,dmy\)) s
5 454 M
(    call get_fft_twodim\(ix,iy,n1,s1,wsvx,wsvy,-1\)) s
5 446 M
(    ) s
5 438 M
(    call trdprs\(n1,ix,iy,s1,dn0,dzi_t,dzi_m,dx,dy\)) s
5 422 M
(    call get_fft_twodim\(ix,iy,n1,s1,wsvx,wsvy,+1\)) s
5 406 M
(    call fll_prs\(n1,n2,n3,ix,iy,pp,s1\)) s
5 398 M
(    call prs_grd\(n1,n2,n3,pp,u,v,w,dzi_m,dx,dy,dtlt\)) s
5 382 M
(    call velset\(n1,n2,n3,u,v,w\)) s
5 366 M
(    pp\(:,:,:\) = pp\(:,:,:\)/th00) s
5 358 M
(    pc\(:,:,:\) = pp\(:,:,:\)) s
5 342 M
(  end subroutine poiss) s
5 334 M
(  !) s
5 326 M
(  ! --------------------------------------------------------------------) s
5 318 M
(  ! subroutine get_diverg: gets velocity divergence and puts it into) s
5 310 M
(  ! a complex value array for use in pressure calculation) s
5 302 M
(  !) s
5 294 M
(  subroutine get_diverg\(n1,n2,n3,ix,iy,s1,u,v,w,dn0,dz,dx,dy,dt,mxdiv\)) s
5 278 M
(    integer, intent \(in\)  :: n1,n2,n3,ix,iy) s
5 270 M
(    real, intent \(in\)     :: dz\(n1\),dn0\(n1\),dx,dy,dt) s
5 262 M
(    real, intent \(in\)     :: u\(n1,n2,n3\),v\(n1,n2,n3\),w\(n1,n2,n3\)) s
5 254 M
(    real, intent \(out\)    :: mxdiv) s
5 246 M
(    complex, intent \(out\) :: s1\(ix,iy,n1\)) s
5 230 M
(    integer :: k,i,j,l,m) s
5 222 M
(    real    :: xf,yf,zf,wf1,wf2,dtv,dti) s
5 206 M
(    s1\(:,:,:\) = \(0.0,0.0\)) s
5 198 M
(    dtv=dt*2.) s
5 190 M
(    dti=1./dtv) s
5 182 M
(    m=0) s
5 174 M
(    do j=3,n3-2) s
5 166 M
(       m=m+1) s
5 158 M
(       l=0) s
5 150 M
(       do i=3,n2-2) s
5 142 M
(          l=l+1) s
5 134 M
(          do k=2,n1-1) s
5 126 M
(             wf1=0.5*\(dn0\(k+1\)+dn0\(k\)\)) s
5 118 M
(             wf2=0.5*\(dn0\(k\)+dn0\(k-1\)\)) s
5 110 M
(             if \(k == 2 \)   wf2=0.) s
5 102 M
(             if \(k == n1-1\) wf1=0.) s
5 94 M
(             xf=dn0\(k\)*dx*dti) s
5 86 M
(             yf=dn0\(k\)*dy*dti) s
5 78 M
(             zf=dti*dz\(k\)) s
5 70 M
(             s1\(l,m,k\)=\(wf1*w\(k,i,j\)-wf2*w\(k-1,i,j\)\)*zf                  &) s
5 62 M
(                  +\(v\(k,i,j\)-v\(k,i,j-1\)\)*yf+\(u\(k,i,j\)-u\(k,i-1,j\)\)*xf) s
5 54 M
(          enddo) s
5 46 M
(       enddo) s
5 38 M
(    enddo) s
5 30 M
(!) s
5 22 M
(! save mxdiv to a statistics array, no reduction necessary as this is done) s
5 14 M
(! in post processing) s
5 6 M
(!) s
377 518 M
(    mxdiv = maxval\(real\(s1\)\)) s
377 502 M
(  end subroutine get_diverg) s
377 494 M
(  !) s
377 486 M
(  !----------------------------------------------------------------------) s
377 478 M
(  ! subroutine fll_prs: writes the pressure to the appropriate array) s
377 470 M
(  !) s
377 462 M
(  subroutine fll_prs\(n1,n2,n3,ix,iy,pp,s1\)  ) s
377 446 M
(    use mpi_interface, only : cyclics,cyclicc) s
377 430 M
(    integer :: n1,n2,n3,ix,iy,k,i,j,l,m,req\(16\)) s
377 422 M
(    real :: pp\(n1,n2,n3\)) s
377 414 M
(    complex :: s1\(ix,iy,n1\)) s
377 398 M
(    pp\(:,:,:\)=0.0) s
377 390 M
(    do k=2,n1-1) s
377 382 M
(       l=0) s
377 374 M
(       do i=3,n2-2) s
377 366 M
(          l=l+1) s
377 358 M
(          m=0) s
377 350 M
(          do j=3,n3-2) s
377 342 M
(             m=m+1) s
377 334 M
(             pp\(k,i,j\) =real\(s1\(l,m,k\)\)) s
377 326 M
(          enddo) s
377 318 M
(       enddo) s
377 310 M
(    enddo) s
377 302 M
(    call cyclics\(n1,n2,n3,pp,req\)) s
377 294 M
(    call cyclicc\(n1,n2,n3,pp,req\)) s
377 278 M
(  end subroutine fll_prs) s
377 270 M
(  !) s
377 262 M
(  !---------------------------------------------------------------------) s
377 254 M
(  ! TRDPRS: solves for the wave number \(l,m\) component of ) s
377 246 M
(  ! pressure in a vertical column using a tri-diagonal solver.) s
377 238 M
(  !) s
377 230 M
(  subroutine trdprs\(n1,ix,iy,s1,dn0,dzi_t,dzi_m,dx,dy\)  ) s
377 214 M
(    use mpi_interface, only : yoffset, nypg, xoffset, wrxid, wryid, nxpg) s
377 206 M
(    use util, only          : tridiff) s
377 190 M
(    integer, intent \(in\)    :: n1,ix,iy) s
377 182 M
(    real, intent \(in\)       :: dn0\(n1\),dzi_t\(n1\),dzi_m\(n1\),dx,dy) s
377 174 M
(    complex, intent \(inout\) :: s1\(ix,iy,n1\)) s
377 158 M
(    real    :: ak\(ix,n1\),dk\(ix,n1\),bk\(ix,n1\),ck\(ix,n1\)) s
377 150 M
(    real    :: xk\(ix,n1\),yk\(ix,n1\),wv\(ix,iy\)) s
377 134 M
(    integer :: k,l,m) s
377 126 M
(    real    :: fctl,fctm,xl,xm,af,cf) s
377 118 M
(    fctl=2.*pi/float\(nxpg-4\)) s
377 110 M
(    fctm=2.*pi/float\(nypg-4\)) s
377 94 M
(    do l=1,ix) s
377 86 M
(          if\(l+xoffset\(wrxid\) .le. \(nxpg-4\)/2+1\) then) s
377 78 M
(            xl=float\(l-1+xoffset\(wrxid\)\)) s
377 70 M
(          else) s
377 62 M
(             xl=float\(l-\(nxpg-4\)-1+xoffset\(wrxid\)\)) s
377 54 M
(          endif) s
377 46 M
(      ) s
377 38 M
(       do m=1,iy) s
377 30 M
(          if\(m+yoffset\(wryid\) .le. \(nypg-4\)/2+1\) then) s
377 22 M
(             xm=float\(m-1+yoffset\(wryid\)\)) s
377 14 M
(          else) s
377 6 M
(             xm=float\(m-\(nypg-4\)-1+yoffset\(wryid\)\)) s
_R
S
%%Page: (3) 3
%%BeginPageSetup
_S
90 rotate
24 -588 translate
/pagenum 3 def
/fname (prss.f90) def
/fdir () def
/ftail (prss.f90) def
% User defined strings:
/pagenumstr (3) def
/moddatestr (04/09/08) def
/modtimestr (15:58:31) def
/user_header_p false def
%%EndPageSetup
column_lines
do_header
5 518 M
(          endif) s
5 510 M
(          wv\(l,m\)=2.*\(\(cos\(fctl*xl\)-1.\)*dx*dx + \(cos\(fctm*xm\)-1.\)*dy*dy\)) s
5 502 M
(       enddo) s
5 494 M
(    enddo) s
5 470 M
(    if\(wrxid.eq.0 .and. wryid .eq.0 \) then) s
5 462 M
(       wv\(1,1\)=0.) s
5 454 M
(    endif) s
5 446 M
(    !) s
5 438 M
(    ! configure vectors for tri-diagonal solver) s
5 430 M
(    !) s
5 422 M
(    do m=1,iy) s
5 414 M
(       do k=2,n1-1 ) s
5 406 M
(          af=\(dn0\(k\)+dn0\(k-1\)\)*.5) s
5 398 M
(          cf=\(dn0\(k+1\)+dn0\(k\)\)*.5) s
5 390 M
(          if \(k == 2   \)af=0.) s
5 382 M
(          if \(k == n1-1\)cf=0.) s
5 374 M
(          do l=1,ix) s
5 366 M
(             ak\(l,k\)=dzi_t\(k\)*dzi_m\(k-1\)*af) s
5 358 M
(             bk\(l,k\)=s1\(l,m,k\)) s
5 350 M
(             ck\(l,k\)=dzi_t\(k\)*dzi_m\(k\)*cf) s
5 342 M
(             dk\(l,k\)=dn0\(k\)*wv\(l,m\)-\(ak\(l,k\)+ck\(l,k\)\)) s
5 334 M
(          enddo) s
5 326 M
(       enddo) s
5 318 M
(       !) s
5 310 M
(       ! solve for fourier components, x_k, given a tri-diagonal matrix of the) s
5 302 M
(       ! form a_k x_k-1 + d_k x_k + c_k x_k+1 = b_k.  y_k is a scratch array.) s
5 294 M
(       !) s
5 286 M
(       call tridiff\(ix,n1-1,ix,ak,dk,ck,bk,xk,yk\)) s
5 270 M
(       do k=2,n1-1) s
5 262 M
(          do l=1,ix) s
5 254 M
(             if \(m+yoffset\(wryid\)+l+xoffset\(wrxid\)>2\) bk\(l,k\)=aimag\(s1\(l,m,k\)\)) s
5 246 M
(             if \(m+yoffset\(wryid\)+l+xoffset\(wrxid\)>2\) s1\(l,m,k\)=xk\(l,k\)) s
5 238 M
(          enddo) s
5 230 M
(       enddo) s
5 222 M
(      ) s
5 214 M
(       call tridiff\(ix,n1-1,ix,ak,dk,ck,bk,xk,yk\)) s
5 198 M
(       do k=2,n1-1) s
5 190 M
(          do l=1,ix) s
5 182 M
(             if \(m+yoffset\(wryid\)+l+xoffset\(wrxid\) > 2\)                &) s
5 174 M
(                  s1\(l,m,k\)=cmplx\(real\(s1\(l,m,k\)\),xk\(l,k\)\)) s
5 166 M
(          enddo) s
5 158 M
(       enddo) s
5 142 M
(    enddo) s
5 126 M
(  end subroutine trdprs) s
5 118 M
(  !) s
5 110 M
(  !---------------------------------------------------------------------) s
5 102 M
(  ! Subroutine Prs_grd: apply the pressure gradient term) s
5 94 M
(  !) s
5 86 M
(  subroutine prs_grd\(n1,n2,n3,p,u,v,w,dz,dx,dy,dtlt\)) s
5 70 M
(    integer, intent \(in\) :: n1,n2,n3) s
5 62 M
(    real, intent \(in\)    :: p\(n1,n2,n3\),dz\(n1\),dx,dy,dtlt) s
5 54 M
(    real, intent \(inout\) :: u\(n1,n2,n3\),v\(n1,n2,n3\),w\(n1,n2,n3\)) s
5 38 M
(    integer :: i,j,k) s
5 22 M
(    do j=1,n3-1) s
5 14 M
(       do i=1,n2-1) s
5 6 M
(          do k=2,n1-1) s
377 518 M
(             if\(k /= n1-1\)w\(k,i,j\)=w\(k,i,j\)-dz\(k\)*2.*dtlt*\(p\(k+1,i,j\)-p\(k,i,j\)\)) s
377 510 M
(             u\(k,i,j\)=u\(k,i,j\)-dx*2.*dtlt*\(p\(k,i+1,j\)-p\(k,i,j\)\)) s
377 502 M
(             v\(k,i,j\)=v\(k,i,j\)-dy*2.*dtlt*\(p\(k,i,j+1\)-p\(k,i,j\)\)) s
377 494 M
(          enddo) s
377 486 M
(       enddo) s
377 478 M
(    enddo) s
377 462 M
(  end subroutine prs_grd) s
377 454 M
(  !) s
377 446 M
(  !---------------------------------------------------------------------) s
377 438 M
(  ! Subroutine Prs_cor: correlate the pressure tendency with velocity) s
377 430 M
(  ! field for TKE budget) s
377 422 M
(  !) s
377 414 M
(  subroutine prs_cor\(n1,n2,n3,p,u,v,w,dz,dx,dy,th00\)) s
377 398 M
(    use stat, only : updtst) s
377 390 M
(    use util, only : get_cor) s
377 374 M
(    integer, intent \(in\) :: n1,n2,n3) s
377 366 M
(    real, intent \(in\)    :: p\(n1,n2,n3\),dz\(n1\),dx,dy,th00) s
377 358 M
(    real, intent \(in\)    :: u\(n1,n2,n3\),v\(n1,n2,n3\),w\(n1,n2,n3\)) s
377 342 M
(    real, dimension \(n2,n3\) :: pgx, pgy, pgz, ufld, vfld, wfld) s
377 334 M
(    real    :: fx, fy, fz, v1da\(n1\), v1db\(n1\), v1dc\(n1\)) s
377 326 M
(    integer :: i,j,k,ip1,jp1) s
377 310 M
(    v1da = 0.0) s
377 302 M
(    v1db = 0.0) s
377 294 M
(    v1dc = 0.0) s
377 278 M
(    do k=2,n1-1) s
377 270 M
(       fx=dx*th00) s
377 262 M
(       fy=dy*th00) s
377 254 M
(       fz=dz\(k\)*th00) s
377 246 M
(       do j=1,n3) s
377 238 M
(          do i=1,n2) s
377 230 M
(             ip1 = min\(n2,i+1\)) s
377 222 M
(             jp1 = min\(n3,j+1\)) s
377 214 M
(             pgx\(i,j\) = -fx*\(p\(k,ip1,j\)-p\(k,i,j\)\)) s
377 206 M
(             pgy\(i,j\) = -fy*\(p\(k,i,jp1\)-p\(k,i,j\)\)) s
377 198 M
(             pgz\(i,j\) = -fz*\(p\(k+1,i,j\)-p\(k,i,j\)\)) s
377 190 M
(             ufld\(i,j\) = u\(k,i,j\)) s
377 182 M
(             vfld\(i,j\) = v\(k,i,j\)) s
377 174 M
(             wfld\(i,j\) = w\(k,i,j\)) s
377 166 M
(          end do) s
377 158 M
(       end do) s
377 150 M
(       v1da\(k\) = get_cor\(1,n2,n3,1,ufld,pgx\)) s
377 142 M
(       v1db\(k\) = get_cor\(1,n2,n3,1,vfld,pgy\)) s
377 134 M
(       v1dc\(k\) = get_cor\(1,n2,n3,1,wfld,pgz\)) s
377 126 M
(    enddo) s
377 118 M
(    call updtst\(n1,'prs',1,v1da,1\)) s
377 110 M
(    call updtst\(n1,'prs',2,v1db,1\)) s
377 102 M
(    call updtst\(n1,'prs',3,v1dc,1\)) s
377 86 M
(  end subroutine prs_cor) s
377 78 M
(  !) s
377 70 M
(  ! --------------------------------------------------------------------) s
377 62 M
(  ! subroutine chk_tsplt) s
377 54 M
(  !) s
377 46 M
(  subroutine chk_tsplt\(n1,n2,n3,up,vp,wp,uc,vc,wc\)) s
377 30 M
(    integer, intent \(in\) :: n1,n2,n3) s
377 22 M
(    real, intent \(in\)    :: up\(n1,n2,n3\),vp\(n1,n2,n3\),wp\(n1,n2,n3\)) s
377 14 M
(    real, intent \(in\)    :: uc\(n1,n2,n3\),vc\(n1,n2,n3\),wc\(n1,n2,n3\)) s
_R
S
%%Page: (4) 4
%%BeginPageSetup
_S
90 rotate
24 -588 translate
/pagenum 4 def
/fname (prss.f90) def
/fdir () def
/ftail (prss.f90) def
% User defined strings:
/pagenumstr (4) def
/moddatestr (04/09/08) def
/modtimestr (15:58:31) def
/user_header_p false def
%%EndPageSetup
column_lines
do_header
5 518 M
(    real :: wmx,umx,vmx) s
5 502 M
(    wmx = maxval\(\(wp-wc\)/\(wp+wc+1.e-5\)\)) s
5 494 M
(    umx = maxval\(\(up-uc\)/\(up+uc+1.e-5\)\)) s
5 486 M
(    vmx = maxval\(\(vp-vc\)/\(vp+vc+1.e-5\)\)) s
5 470 M
(  end subroutine chk_tsplt) s
5 462 M
(  !) s
5 454 M
(  !----------------------------------------------------------------------) s
5 446 M
(  ! Subroutine Asselin:  Applies the asselin filter in two stages ) s
5 438 M
(  ! depending on the value of iac) s
5 430 M
(  !) s
5 422 M
(  subroutine asselin\(iac\)) s
5 406 M
(    use grid, only : a_up,a_vp,a_wp,a_uc,a_vc,a_wc,a_scr1, nxyzp, runtype) s
5 390 M
(    integer :: iac) s
5 382 M
(    integer, save ::ncall=0) s
5 366 M
(    if \(runtype == 'HISTORY'\) ncall=1) s
5 350 M
(    call predict\(nxyzp,a_uc,a_up,a_scr1,iac,ncall\)) s
5 342 M
(    call predict\(nxyzp,a_vc,a_vp,a_scr1,iac,ncall\)) s
5 334 M
(    call predict\(nxyzp,a_wc,a_wp,a_scr1,iac,ncall\)) s
5 326 M
(    if \(iac == 2\) ncall=ncall+1) s
5 310 M
(  end subroutine asselin) s
5 302 M
(  !) s
5 294 M
(  !----------------------------------------------------------------------) s
5 286 M
(  ! Subroutine predict:  This subroutine advances the leapfrog terms) s
5 278 M
(  ! in two stages.  It applies the filter equation:) s
5 270 M
(  !) s
5 262 M
(  !         a\(n\) = a\(n\) + eps * \(a\(n-1\) - 2*a\(n\) + a\(n+1\)\)) s
5 254 M
(  !) s
5 246 M
(  ! the first stage of the filter applies all but the a\(n+2\) term.) s
5 238 M
(  ! the second stage renames the variables and applies this term, i.e.,) s
5 230 M
(  ! a\(n+1\) -> a\(n\), a\(n+2\) -> a\(n+1\).  Note that for iac=2 ap=a\(n+2\)) s
5 222 M
(  ! because the tendencies have been updated in pressure solver.  Durran,) s
5 214 M
(  ! in his text cites values of eps of 0.2 for convective cloud models, ) s
5 206 M
(  ! we seem to get by with eps=0.1, perhaps because of the coupling) s
5 198 M
(  ! provided by the staggered forward step.) s
5 190 M
(  !) s
5 182 M
(  subroutine predict\(npts,ac,ap,af,iac,iflag\)) s
5 166 M
(    integer :: m,npts,iac,iflag) s
5 158 M
(    real :: ac\(npts\),ap\(npts\),af\(npts\),epsu) s
5 150 M
(    real, parameter :: eps=0.1) s
5 134 M
(    epsu=eps) s
5 126 M
(    if \(iflag == 0\) epsu=0.5) s
5 118 M
(    if \(iac == 1\) then) s
5 110 M
(       do m=1,npts) s
5 102 M
(          ac\(m\)=ac\(m\)+epsu*\(ap\(m\)-2.*ac\(m\)\)) s
5 94 M
(       enddo) s
5 86 M
(    else if \(iac == 2\) then) s
5 78 M
(       do m=1,npts) s
5 70 M
(          af\(m\)=ap\(m\)) s
5 62 M
(          ap\(m\)=ac\(m\)+epsu*af\(m\)) s
5 54 M
(          ac\(m\)=af\(m\)) s
5 46 M
(       enddo) s
5 38 M
(    endif) s
5 22 M
(  end subroutine predict) s
5 14 M
(  !) s
5 6 M
(  !----------------------------------------------------------------------) s
377 518 M
(  ! Subroutine Velocity_bcs: Applies boundary conditions on veolicities) s
377 510 M
(  !) s
377 502 M
(  subroutine velocity_bcs) s
377 486 M
(    use grid, only : a_up,a_vp,a_wp,a_uc,a_vc,a_wc,a_pexnr,a_press,           &) s
377 478 M
(         nxp, nyp, nzp, dzi_m) s
377 470 M
(    use util, only : velset, sclrset) s
377 454 M
(    call velset\(nzp,nxp,nyp,a_up,a_vp,a_wp\)) s
377 446 M
(    call velset\(nzp,nxp,nyp,a_uc,a_vc,a_wc\)) s
377 438 M
(    call sclrset\('grad',nzp,nxp,nyp,a_pexnr,dzi_m\)) s
377 430 M
(    call sclrset\('grad',nzp,nxp,nyp,a_press,dzi_m\)) s
377 414 M
(  end subroutine velocity_bcs) s
377 398 M
(end module prss) s
_R
S
%%Trailer
%%Pages: 4
%%DocumentNeededResources: font Times-Roman Courier-Bold Courier 
%%+ font Times-Bold 
%%EOF
